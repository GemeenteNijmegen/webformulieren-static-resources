{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA,IAAIA,SAAS,GAAQ,EAAE;AAEhB,MAAMC,SAAS,GAAIC,IAAS,IAAI;EACnCF,SAAS,GAAGE,IAAI;AACpB,CAAC;AAEM,MAAMC,SAAS,GAAG,MAAK;EAC1BH,SAAS,CAACI,OAAO,GAAGJ,SAAS,CAACK,cAAc,GACxC,KAAK,GAAGL,SAAS,CAACM,eAAe,GAAG,KAAK,GAAGC,6DAAqC,GAAG,EAAE;EAE1F,OAAOP,SAAS;AACpB,CAAC;;;;;;;;;;;;;;;;;ACX8C;AAES;AAAA,SAEzCS,UAAU;EAAA;AAAA;AAAA;EAAA,0NAAzB,aAAyB;IACvB,IAAIN,0DAAS,EAAE,CAACO,UAAU,EAAE;MAC1BF,6DAAc,EAAE;;IAGlB,MAAMG,kBAAkB,SAAS,iJAA0B;IAC3DC,sEAAAA,EAAwB,CAACC,eAAe,CAACF,kBAAkB,CAACG,SAAS,CAAC,CACnEC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EAAA;AAAA;AAEDG,KAAK,CAAC,yBAAyB,CAAC,CAC7BC,IAAI,CAACC,QAAQ,IAAG;EACf,IAAIA,QAAQ,CAACC,EAAE,EAAE;IACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;;EAExB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;AAC9C,CAAC,CAAC,CACDJ,IAAI,CAACK,MAAM,IAAG;EACbxB,0DAAS,CAACwB,MAAM,CAAC;AACnB,CAAC,CAAC,CACDV,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC,CAChCU,OAAO,CAACjB,UAAU,CAAC","sources":["./src/app/app-config.ts","./src/main.ts"],"sourcesContent":["let appConfig: any = {};\n\nexport const setConfig = (data: any) => {\n    appConfig = data;\n};\n\nexport const getConfig = () => {\n    appConfig.version = appConfig.displayVersion ?\n        ' - ' + appConfig.environmentname + ' v.' + require('../../package.json').version : '';\n\n    return appConfig;\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { getConfig, setConfig } from './app/app-config';\n\nasync function initialize() {\n  if (getConfig().production) {\n    enableProdMode();\n  }\n\n  const appModuleContainer = await import('./app/app.module');\n  platformBrowserDynamic().bootstrapModule(appModuleContainer.AppModule)\n    .catch(err => console.error(err));\n}\n\nfetch('/assets/app-config.json')\n  .then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('app-config.json not found');\n  })\n  .then(config => {\n    setConfig(config)\n  })\n  .catch(err => console.error(err))\n  .finally(initialize)\n"],"names":["appConfig","setConfig","data","getConfig","version","displayVersion","environmentname","require","enableProdMode","initialize","production","appModuleContainer","__NgCli_bootstrap_1","bootstrapModule","AppModule","catch","err","console","error","fetch","then","response","ok","json","Error","config","finally"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}